<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.github.cataclysmuprising.myapp.persistence.mapper.ActionMapper">
	<resultMap type="ActionBean" id="Parent_ActionResult">
		<id property="id" column="act_id"/>
		<result property="page" column="act_page"/>
		<result property="actName" column="act_action_name"/>
		<result property="displayName" column="act_display_name"/>
		<result property="actType" column="act_action_type"/>
		<result property="url" column="act_url"/>
		<result property="description" column="act_description"/>
	</resultMap>

	<resultMap type="ActionBean" id="ActionResult" extends="Parent_ActionResult">
		<result property="recordRegId" column="act_record_reg_id"/>
		<result property="recordUpdId" column="act_record_upd_id"/>
		<result property="recordRegDate" column="act_record_reg_date"/>
		<result property="recordUpdDate" column="act_record_upd_date"/>
	</resultMap>

	<sql id="tables">
		FROM mjr_action act
	</sql>

	<sql id="main_columns">
		act.id AS act_id,
		act.page AS act_page,
		act.action_name AS act_action_name,
		act.display_name AS act_display_name,
		act.action_type AS act_action_type,
		act.url AS act_url,
		act.description AS act_description
	</sql>

	<sql id="meta_columns">
		, act.record_reg_id AS act_record_reg_id
		, act.record_upd_id AS act_ecord_upd_id
		, act.record_reg_date AS act_record_reg_date
		, act.record_upd_date AS act_record_upd_date
	</sql>

	<sql id="columns">
		<include refid="main_columns"/>
		<include refid="meta_columns"/>
	</sql>

	<sql id="criterias">
		<if test="_parameter.containsKey('criteria') and criteria != null">
			<where>
				<if test="criteria.id != null">
					AND act.id = #{criteria.id}
				</if>
				<if test="criteria.includeIds != null and criteria.includeIds.size gt 0">
					AND act.id IN
					<foreach item="id" index="index" collection="criteria.includeIds" open="(" separator="," close=")">
						${id}
					</foreach>
				</if>
				<if test="criteria.excludeIds != null and criteria.excludeIds.size gt 0">
					AND act.id NOT IN
					<foreach item="id" index="index" collection="criteria.excludeIds" open="(" separator="," close=")">
						${id}
					</foreach>
				</if>
				<if test="criteria.page != null">
					AND act.page = #{criteria.page}
				</if>
				<if test="criteria.actionName != null">
					AND act.action_name = #{criteria.actionName}
				</if>
				<if test="criteria.displayName != null">
					AND act.display_name = #{criteria.displayName}
				</if>
				<if test="criteria.actionType != null">
					AND act.action_type = #{criteria.actionType}
				</if>
				<if test="criteria.url != null">
					AND act.url = #{criteria.url}
				</if>
				<if test="criteria.word != null">
					AND
					(act.page ILIKE '%${criteria.word}%'
					OR act.action_name ILIKE '%${criteria.word}%'
					OR act.display_name ILIKE '%${criteria.word}%'
					OR act.url ILIKE '%${criteria.word}%'
					OR act.description ILIKE '%${criteria.word}%')
				</if>
			</where>
		</if>
	</sql>

	<sql id="orders">
		ORDER BY
		<choose>
			<when test="_parameter.containsKey('criteria') and criteria !=null">
				<choose>
					<when test="criteria.orderBy == 'id'">
						act.id ${criteria.order.getValue()}
					</when>
					<when test="criteria.orderBy == 'page'">
						act.page ${criteria.order.getValue()}
					</when>
					<when test="criteria.orderBy == 'actionName'">
						act.action_name ${criteria.order.getValue()}
					</when>
					<when test="criteria.orderBy == 'displayName'">
						act.display_name ${criteria.order.getValue()}
					</when>
					<when test="criteria.orderBy == 'actionType'">
						act.action_type ${criteria.order.getValue()}
					</when>
					<otherwise>
						act.id DESC
					</otherwise>
				</choose>
			</when>
			<otherwise>
				act.id DESC
			</otherwise>
		</choose>
	</sql>

	<select id="selectByPrimaryKey" resultMap="ActionResult">
		SELECT
		<include refid="columns"/>
		<include refid="tables"/>
		WHERE
		act.id = #{primaryKey}
	</select>

	<select id="selectSingleRecord" resultMap="ActionResult">
		SELECT
		<include refid="columns"/>
		<include refid="tables"/>
		<include refid="criterias"/>
	</select>

	<select id="selectMultiRecords" resultMap="ActionResult">
		SELECT
		<include refid="columns"/>
		<include refid="tables"/>
		<include refid="criterias"/>
		<include refid="orders"/>
		<include refid="com.github.cataclysmuprising.mybatis.mapper.BaseMapper.offset_limit"/>
	</select>

	<select id="selectCounts" resultType="long">
		SELECT count(DISTINCT act.id)
		<include refid="tables"/>
		<include refid="criterias"/>
	</select>

	<select id="selectAvailableActionsForAuthenticatedUser" resultType="String">
		SELECT act.action_name
		FROM mjr_role_action ra
		INNER JOIN mjr_action act ON ra.action_id = act.id
		WHERE
		ra.role_id IN
		<foreach item="id" index="index" collection="roleIds" open="(" separator="," close=")">
			${id}
		</foreach>
		AND act.action_type = 0
		<if test="pageName != null">
			UNION
			SELECT act.action_name
			FROM mjr_role_action ra
			INNER JOIN mjr_action act ON ra.action_id = act.id
			WHERE
			ra.role_id IN
			<foreach item="id" index="index" collection="roleIds" open="(" separator="," close=")">
				${id}
			</foreach>
			AND act.page= #{pageName} AND act.action_type = 1
		</if>
	</select>

</mapper>