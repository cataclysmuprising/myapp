<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~
  ~   This source file is free software, available under the following license: MIT license.
  ~   Copyright (c) 2018, Than Htike Aung(https://github.com/cataclysmuprising) All Rights Reserved.
  ~
  ~   Permission is hereby granted, free of charge, to any person obtaining a copy
  ~   of this software and associated documentation files (the "Software"), to deal
  ~   in the Software without restriction, including without limitation the rights
  ~   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~   copies of the Software, and to permit persons to whom the Software is
  ~   furnished to do so, subject to the following conditions:
  ~
  ~   The above copyright notice and this permission notice shall be included in all
  ~   copies or substantial portions of the Software.
  ~
  ~   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  ~   SOFTWARE.
  ~
  ~  	myapp-persistence - USER.xml
  ~  	Using Java(TM) SE Runtime Environment (build 1.8.0_151-b12)
  ~ 	    Last Modified - 8/13/18 3:39 PM
  ~  	@author Than Htike Aung {@literal <rage.cataclysm@gmail.com>}
  ~  	@Since 2018
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.github.cataclysmuprising.myapp.persistence.mapper.UserMapper">

	<resultMap type="UserBean" id="Parent_UserResult">
		<id property="id" column="usr_id"/>
		<result property="contentId" column="content_id"/>
		<result property="name" column="usr_name"/>
		<result property="email" column="usr_email"/>
		<result property="password" column="usr_password"/>
		<result property="nrc" column="usr_nrc"/>
		<result property="phone" column="usr_phone"/>
		<result property="status" column="usr_status"/>
		<result property="age" column="usr_age"/>
		<result property="gender" column="usr_gender"/>
		<result property="dob" column="usr_dob" jdbcType="DATE"/>
		<result property="address" column="usr_address"/>

	</resultMap>

	<resultMap type="UserBean" id="UserResult" extends="Parent_UserResult">
		<result property="recordRegId" column="usr_record_reg_id"/>
		<result property="recordUpdId" column="usr_record_upd_id"/>
		<result property="recordRegDate" column="usr_record_reg_date"/>
		<result property="recordUpdDate" column="usr_record_upd_date"/>
		<association property="content" javaType="StaticContentBean" resultMap="com.github.cataclysmuprising.myapp.persistence.mapper.StaticContentMapper.Parent_StaticContentResult"/>
	</resultMap>

	<resultMap  	 type="AuthenticatedUserBean" 	id="AuthenticatedUserResult">
		<id 		 property="id" 							column="usr_id" />
		<result 	 property="name" 						column="usr_name" />
		<result 	 property="email" 						column="usr_email" />
		<result 	 property="password" 					column="usr_password" />
		<result 	 property="nrc"                	 		column="usr_nrc" />	
		<result 	 property="contentId" 					column="usr_content_id" />	
		<result 	 property="status" 						column="usr_status" />
		<result 	 property="roleIds" 					column="role_ids" 						javaType="java.util.ArrayList" 	jdbcType="BIGINT"  	typeHandler="com.github.cataclysmuprising.myapp.common.mybatis.typeHandler.LongArrayListTypeHandler"/>
		<result 	 property="roles" 						column="role_names" 					javaType="java.util.ArrayList" 	jdbcType="VARCHAR" 	typeHandler="com.github.cataclysmuprising.myapp.common.mybatis.typeHandler.StringArrayListTypeHandler"/>
	</resultMap>
	
	<sql id="tables">
		FROM mjr_user usr
		<if test="_parameter.containsKey('criteria') and criteria != null">
			<if test="criteria.withStaticContent == true">
				LEFT JOIN mjr_static_content stc ON usr.content_id = stc.id
			</if>
		</if>
	</sql>

	<sql id="main_columns">
		usr.id AS usr_id,
		usr.content_id AS usr_content_id,
		usr.name AS usr_name,
		usr.email AS usr_email,
		usr.password AS usr_password,
		usr.nrc AS usr_nrc,
		usr.phone AS usr_phone,
		usr.status AS usr_status,
		usr.age AS usr_age,
		usr.gender AS usr_gender,
		usr.dob AS usr_dob,
		usr.address AS usr_address
	</sql>

	<sql id="meta_columns">
		, usr.record_reg_id AS usr_record_reg_id
		, usr.record_upd_id AS usr_record_upd_id
		, usr.record_reg_date AS usr_record_reg_date
		, usr.record_upd_date AS usr_record_upd_date
	</sql>

	<sql id="major_table_columns">
		content_id,
		name,
		email,
		password,
		nrc,
		phone,
		status,
		age,
		gender,
		dob,
		address
	</sql>

	<sql id="major_table_fields">
		#{contentId},
		#{name},
		#{email},
		#{password},
		#{nrc},
		#{phone},
		#{status},
		#{age},
		#{gender},
		#{dob},
		#{address}
	</sql>

	<sql id="major_table_iterate_fields">
		#{record.contentId},
		#{record.name},
		#{record.email},
		#{record.password},
		#{record.nrc},
		#{record.phone},
		#{record.status},
		#{record.age},
		#{record.gender},
		#{record.dob},
		#{record.address}
	</sql>

	<sql id="columns">
		<include refid="main_columns"/>
		<if test="_parameter.containsKey('criteria') and criteria != null">
			<if test="criteria.withStaticContent == true">
				,
				<include refid="com.github.cataclysmuprising.myapp.persistence.mapper.StaticContentMapper.main_columns"/>
			</if>

		</if>
		<include refid="meta_columns"/>
	</sql>

	<sql id="criterias">
		<if test="_parameter.containsKey('criteria') and criteria != null">
			<where>
				<if test="criteria.id != null">
					AND usr.id = #{criteria.id}
				</if>
				<if test="criteria.includeIds != null and criteria.includeIds.size gt 0">
					AND usr.id IN
					<foreach item="id" index="index" collection="criteria.includeIds" open="(" separator="," close=")">
						${id}
					</foreach>
				</if>
				<if test="criteria.excludeIds != null and criteria.excludeIds.size gt 0">
					AND usr.id NOT IN
					<foreach item="id" index="index" collection="criteria.excludeIds" open="(" separator="," close=")">
						${id}
					</foreach>
				</if>
				<if test="criteria.name != null">
					AND usr.name = #{criteria.name}
				</if>
				<if test="criteria.email != null">
					AND usr.email = #{criteria.email}
				</if>
				<if test="criteria.nrc != null">
					AND usr.nrc = #{criteria.nrc}
				</if>
				<if test="criteria.phone != null">
					AND usr.phone = #{criteria.phone}
				</if>
				<if test="criteria.status != null">
					AND usr.status = #{criteria.status}
				</if>
				<if test="criteria.word != null">
					AND
					(usr.name ILIKE '%${criteria.word}%'
					OR usr.email ILIKE '%${criteria.word}%'
					OR usr.address ILIKE '%${criteria.word}%')
				</if>
			</where>
		</if>
	</sql>

	<sql id="orders">
		ORDER BY
		<choose>
			<when test="_parameter.containsKey('criteria') and criteria !=null">
				<choose>
					<when test="criteria.orderBy == 'id'">
						usr.id ${criteria.order.getValue()}
					</when>
					<when test="criteria.orderBy == 'name'">
						usr.name ${criteria.order.getValue()}
					</when>
					<when test="criteria.orderBy == 'email'">
						usr.email ${criteria.order.getValue()}
					</when>
					<when test="criteria.orderBy == 'status'">
						usr.status ${criteria.order.getValue()}
					</when>
					<otherwise>
						usr.id DESC
					</otherwise>
				</choose>
			</when>
			<otherwise>
				usr.id DESC
			</otherwise>
		</choose>
	</sql>

	<insert id="insert" parameterType="UserBean" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO mjr_user (
		<include refid="major_table_columns"/>
		<include refid="com.github.cataclysmuprising.mybatis.mapper.BaseMapper.meta_table_columns"/>
		) VALUES (
		<include refid="major_table_fields"/>
		<include refid="com.github.cataclysmuprising.mybatis.mapper.BaseMapper.meta_table_fields"/>
		)
	</insert>

	<insert id="insertList" parameterType="java.util.List">
		<if test="records != null and records.size() > 0">
			INSERT INTO mjr_user (
			<include refid="major_table_columns"/>
			<include refid="com.github.cataclysmuprising.mybatis.mapper.BaseMapper.meta_table_columns"/>
			) VALUES
			<foreach item="record" collection="records" open="(" separator="),(" close=")">
				<include refid="major_table_iterate_fields"/>
				<include refid="com.github.cataclysmuprising.mybatis.mapper.BaseMapper.meta_table_iterate_fields"/>
			</foreach>
		</if>
	</insert>

	<!-- Notice : Email won't allow to Edit -->
	<update id="update" parameterType="UserBean">
		UPDATE mjr_user usr
		<set>
			record_upd_id = #{recordUpdId},
			record_upd_date = current_timestamp,
			<if test="contentId != null">
				content_id = #{contentId},
			</if>
			<if test="name != null">
				name = #{name},
			</if>
			<if test="password != null">
				password = #{password},
			</if>
			<if test="nrc != null">
				nrc = #{nrc},
			</if>
			<if test="phone != null">
				phone = #{phone},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
			<if test="age != null">
				age = #{age},
			</if>
			<if test="gender != null">
				gender = #{gender},
			</if>
			<if test="dob != null">
				dob = #{dob},
			</if>
			<if test="address != null">
				address = #{address},
			</if>
		</set>
		WHERE id = #{id}
	</update>

	<!-- Notice : Email won't allow to Edit -->
	<update id="updateWithCriteria">
		UPDATE mjr_user usr
		<set>
			record_upd_date = current_timestamp,
			<if test="updateItems != null and updateItems.keySet().size() > 0">
				<if test="updateItems.contentId != null">content_id = #{updateItems.contentId},</if>
				<if test="updateItems.name != null">name = #{updateItems.name},</if>
				<if test="updateItems.password != null">password = #{updateItems.password},</if>
				<if test="updateItems.nrc != null">nrc = #{updateItems.nrc},</if>
				<if test="updateItems.phone != null">phone = #{updateItems.phone},</if>
				<if test="updateItems.status != null">status = #{updateItems.status},</if>
				<if test="updateItems.age != null">age = #{updateItems.age},</if>
				<if test="updateItems.gender!= null">gender = #{updateItems.gender},</if>
				<if test="updateItems.dob != null">dob = #{updateItems.dob},</if>
				<if test="updateItems.address != null">address = #{updateItems.address},</if>
				record_upd_id = #{updateItems.recordUpdId}
			</if>
		</set>
		<include refid="criterias"/>
	</update>

	<delete id="deleteByPrimaryKey">
		DELETE FROM mjr_user usr
		WHERE id = #{primaryKey}
	</delete>

	<delete id="deleteByCriteria">
		<if test="_parameter.containsKey('criteria') and criteria != null">
			DELETE FROM mjr_user usr
			<include refid="criterias"/>
		</if>
	</delete>

	<select id="selectByPrimaryKey" resultMap="UserResult">
		SELECT
		<include refid="columns"/>
		<include refid="tables"/>
		WHERE
		usr.id = #{primaryKey}
	</select>

	<select id="selectSingleRecord" resultMap="UserResult">
		SELECT
		<include refid="columns"/>
		<include refid="tables"/>
		<include refid="criterias"/>
	</select>

	<select id="selectMultiRecords" resultMap="UserResult">
		SELECT
		<include refid="columns"/>
		<include refid="tables"/>
		<include refid="criterias"/>
		<include refid="orders"/>
		<include refid="com.github.cataclysmuprising.mybatis.mapper.BaseMapper.offset_limit"/>
	</select>

	<select id="selectCounts" resultType="long">
		SELECT count(DISTINCT usr.id)
		<include refid="tables"/>
		<include refid="criterias"/>
	</select>
	
	<select id="selectAuthenticatedUser" resultMap="AuthenticatedUserResult">
		SELECT
		usr.id AS usr_id,
		usr.name AS usr_name,
		usr.email AS usr_email,
		usr.password AS usr_password,
		usr.nrc AS usr_nrc,
		usr.content_id AS usr_content_id,
		usr.status AS usr_status,
		string_agg(distinct(CONCAT(role.id,'')), ',') AS role_ids,
	    string_agg(distinct(CONCAT(role.id,'_',role.name)), ',') AS role_names
		FROM mjr_user usr   
		LEFT JOIN mjr_user_role ur ON ur.user_id = usr.id
		LEFT JOIN mjr_role role ON role.id = ur.role_id 
		WHERE     
		usr.email = #{email}
		GROUP BY usr.id
	</select>

</mapper>