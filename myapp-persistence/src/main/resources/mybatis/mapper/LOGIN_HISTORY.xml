<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.github.cataclysmuprising.myapp.persistence.mapper.LoginHistoryMapper">

	<resultMap type="LoginHistoryBean" id="Parent_LoginHistoryResult">
		<id property="id" column="lgh_id"/>
		<result property="ipAddress" column="lgh_ip_address"/>
		<result property="os" column="lgh_os"/>
		<result property="userAgent" column="lgh_user_agent"/>
		<result property="userId" column="lgh_user_id"/>
		<result property="loginDate" column="lgh_login_date"/>
	</resultMap>

	<resultMap type="LoginHistoryBean" id="LoginHistoryResult" extends="Parent_LoginHistoryResult">
		<result property="recordRegId" column="lgh_record_reg_id"/>
		<result property="recordUpdId" column="lgh_record_upd_id"/>
		<result property="recordRegDate" column="lgh_record_reg_date"/>
		<result property="recordUpdDate" column="lgh_record_upd_date"/>
		<association property="user" javaType="UserBean" resultMap="com.github.cataclysmuprising.myapp.persistence.mapper.UserMapper.Parent_UserResult"/>
	</resultMap>

	<sql id="tables">
		FROM mjr_login_history lgh
		<if test="_parameter.containsKey('criteria') and criteria != null">
			<if test="criteria.withUser == true">
				INNER JOIN mjr_user usr ON lgh.user_id = usr.id
			</if>
		</if>
	</sql>

	<sql id="main_columns">
		lgh.id AS lgh_id,
		lgh.user_id AS lgh_user_id,
		lgh.login_date AS lgh_login_date,
		lgh.ip_address AS lgh_ip_address,
		lgh.os AS lgh_os,
		lgh.user_agent AS lgh_user_agent
	</sql>

	<sql id="meta_columns">
		, lgh.record_reg_id AS lgh_record_reg_id
		, lgh.record_upd_id AS lgh_record_upd_id
		, lgh.record_reg_date AS lgh_record_reg_date
		, lgh.record_upd_date AS lgh_record_upd_date
	</sql>

	<sql id="columns">
		<include refid="main_columns"/>
		<if test="_parameter.containsKey('criteria') and criteria != null">
			<if test="criteria.withUser == true">
				,
				<include refid="com.github.cataclysmuprising.myapp.persistence.mapper.UserMapper.main_columns"/>
			</if>
		</if>
		<include refid="meta_columns"/>
	</sql>

	<sql id="criterias">
		<if test="_parameter.containsKey('criteria') and criteria != null">
			<where>
				<if test="criteria.id != null">
					lgh.id = #{criteria.id}
				</if>
				<if test="criteria.userId != null">
					AND lgh.user_id = #{criteria.userId}
				</if>
				<if test="criteria.includeIds != null and criteria.includeIds.size gt 0">
					AND lgh.id IN
					<foreach item="id" index="index" collection="criteria.includeIds" open="(" separator="," close=")">
						${id}
					</foreach>
				</if>
				<if test="criteria.excludeIds != null and criteria.excludeIds.size gt 0">
					AND lgh.id NOT IN
					<foreach item="id" index="index" collection="criteria.excludeIds" open="(" separator="," close=")">
						${id}
					</foreach>
				</if>
				<if test="criteria.word != null">
					AND
					(lgh.os ILIKE '%${criteria.word}%'
					OR lgh.user_agent ILIKE '%${criteria.word}%')
				</if>
			</where>
		</if>
	</sql>

	<sql id="orders">
		ORDER BY
		<choose>
			<when test="_parameter.containsKey('criteria') and criteria !=null">
				<choose>
					<when test="criteria.orderBy == 'id'">
						lgh.id ${criteria.order.getValue()}
					</when>
					<when test="criteria.orderBy == 'userId'">
						lgh.user_id ${criteria.order.getValue()}
					</when>
					<otherwise>
						lgh.id DESC
					</otherwise>
				</choose>
			</when>
			<otherwise>
				lgh.id DESC
			</otherwise>
		</choose>
	</sql>

	<sql id="major_table_columns">
		user_id,
		login_date,
		ip_address,
		os,
		user_agent
	</sql>

	<sql id="major_table_fields">
		#{userId},
		#{loginDate},
		#{ipAddress},
		#{os},
		#{userAgent}
	</sql>

	<sql id="major_table_iterate_fields">
		#{record.userId},
		#{record.loginDate},
		#{record.ipAddress},
		#{record.os},
		#{record.userAgent}
	</sql>

	<insert id="insert" parameterType="LoginHistoryBean" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO mjr_login_history (
		<include refid="major_table_columns"/>
		<include refid="com.github.cataclysmuprising.mybatis.mapper.BaseMapper.meta_table_columns"/>
		) VALUES (
		<include refid="major_table_fields"/>
		<include refid="com.github.cataclysmuprising.mybatis.mapper.BaseMapper.meta_table_fields"/>
		)
	</insert>

	<insert id="insertList" parameterType="java.util.List">
		<if test="records != null and records.size() > 0">
			INSERT INTO mjr_login_history (
			<include refid="major_table_columns"/>
			<include refid="com.github.cataclysmuprising.mybatis.mapper.BaseMapper.meta_table_columns"/>
			) VALUES
			<foreach item="record" collection="records" open="(" separator="),(" close=")">
				<include refid="major_table_iterate_fields"/>
				<include refid="com.github.cataclysmuprising.mybatis.mapper.BaseMapper.meta_table_iterate_fields"/>
			</foreach>
		</if>
	</insert>

	<delete id="deleteByPrimaryKey">
		DELETE FROM mjr_login_history lgh
		WHERE id = #{primaryKey}
	</delete>

	<delete id="deleteByCriteria">
		<if test="_parameter.containsKey('criteria') and criteria != null">
			DELETE FROM mjr_login_history lgh
			<include refid="criterias"/>
		</if>
	</delete>

	<select id="selectByPrimaryKey" resultMap="LoginHistoryResult">
		SELECT
		<include refid="columns"/>
		<include refid="tables"/>
		WHERE
		lgh.id = #{primaryKey}
	</select>

	<select id="selectSingleRecord" resultMap="LoginHistoryResult">
		SELECT
		<include refid="columns"/>
		<include refid="tables"/>
		<include refid="criterias"/>
	</select>

	<select id="selectMultiRecords" resultMap="LoginHistoryResult">
		SELECT
		<include refid="columns"/>
		<include refid="tables"/>
		<include refid="criterias"/>
		<include refid="orders"/>
		<include refid="com.github.cataclysmuprising.mybatis.mapper.BaseMapper.offset_limit"/>
	</select>

	<select id="selectCounts" resultType="long">
		SELECT count(DISTINCT lgh.id)
		<include refid="tables"/>
		<include refid="criterias"/>
	</select>

</mapper>